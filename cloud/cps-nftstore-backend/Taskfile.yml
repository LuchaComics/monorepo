version: '3'

tasks:
  start:
    desc: Start the backend in developer mode
    cmds:
      - docker-compose -p cps_nftstore_backend -f dev.docker-compose.yml up --remove-orphans

  end:
    desc: Stop the backend in developer mode
    cmds:
      - docker-compose -p cps_nftstore_backend -f dev.docker-compose.yml down

  console:
    desc: Open console in (developer mode) running backend
    cmds:
      - docker exec -it cps_nftstore_backend bash

  wire:
    desc: Generate new compile-time dependency injection file, called `wire_gen.go`, which is needed by our app.
    cmds:
      - go run github.com/google/wire/cmd/wire

  clean:
    cmds:
      - go clean -cache
      - go clean -modcache

  vendor:
    desc: Save all the libraries into our code repository
    cmds:
      - go mod download
      - go mod vendor

  upgradelib:
    desc: Update all the golang libraries (https://stackoverflow.com/a/67202539)
    cmds:
      - go get -u ./...

  undelast:
    desc: Undue last commit which was not pushed. Special thanks to https://www.nobledesktop.com/learn/git/undo-changes.
    cmds:
      - git reset --soft HEAD~

  genkey:
    desc: Generate a unique key.
    cmds:
      - openssl rand -hex 64.

  stripelogin:
    desc: "Connect your local stripe CLI to a specific account."
    cmds:
      - stripe login

  stripewebhook:
    desc: "Start the stripe listen command and point it to our server so we can test out webhooks for development. Note: You need to have stripe installed on your computer."
    cmds:
      - stripe listen --forward-to=localhost:8000/api/v1/public/stripe-webhook

  striperesend:
    desc: "Stripe will resend a particular webhook event. Example of running this task: `task striperesend -- evt_1NsUFHH2wIbBWH08QipiWfOI`"
    cmds:
      - stripe events resend {{.CLI_ARGS}}

  dockerlogin:
    desc: (DevOps only) Command will log in your developer's machine with the private docker registry.
    cmds:
      -  docker login registry.digitalocean.com

  dockerlogout:
    desc: (DevOps only) Command will log out of the private docker registry. (Important step if you are using other private docker registries)
    cmds:
      - docker logout registry.digitalocean.com

  dockerdeployprod:
    desc: (DevOps only) Command will build the production container of this project and deploy to the private docker registry.
    cmds:
      - docker build -f Dockerfile --rm -t registry.digitalocean.com/ssp/cps-nftstore-backend:prod --platform linux/amd64 .
      - docker tag registry.digitalocean.com/ssp/cps-nftstore-backend:prod registry.digitalocean.com/ssp/cps-nftstore-backend:prod
      - docker push registry.digitalocean.com/ssp/cps-nftstore-backend:prod

  dockerdeployqa:
    desc: (DevOps only) Command will build the quality assurance (QA) container of this project and deploy to the private docker registry.
    cmds:
      - docker build -f Dockerfile --rm -t registry.digitalocean.com/ssp/cps-nftstore-backend:qa --platform linux/amd64 .
      - docker tag registry.digitalocean.com/ssp/cps-nftstore-backend:qa registry.digitalocean.com/ssp/cps-nftstore-backend:qa
      - docker push registry.digitalocean.com/ssp/cps-nftstore-backend:qa
